import { defineConfig, Plugin } from 'vite'
import tailwindcss from '@tailwindcss/vite';
import fs from 'fs';
import path from 'path';

export default defineConfig({
  plugins: [tailwindcss(), tailwindAtProperties()],
  resolve: {
    alias: {
      '@components': path.resolve(__dirname, 'src/components'),
      '@shared': path.resolve(__dirname, 'src/components/shared'),
    },
  },
  build: {
    lib: {
      entry: 'src/index.ts',
      name: 'Flowy',
      formats: ['es'],
      fileName: (format) => `flowy.${format}.js`,
    },
    target: 'es2022',
    outDir: 'dist/es2022',
  },
})

// export default defineConfig({
//   plugins: [tailwindcss(), tailwindAtProperties()],
// });

function tailwindAtProperties(): Plugin {
  return {
    name: 'tailwindAtProperties',
    transform(code, id) {
      if (!id.includes('tailwind-styles-root.css')) {
        return;
      }

      const propertyRegex = /@property\s+[^{]+\{[^}]+\}/gs;
      const matches = code.match(propertyRegex);

      const s = '/* Autogenerated by tailwindAtProperties plugin (see vite.config.ts) */\n';
      fs.writeFileSync(
        path.resolve(import.meta.dirname, 'src/components/shared/at-properties.css'),
        matches === null ? s : s + matches.join('\n')
      );
    },
  };
}